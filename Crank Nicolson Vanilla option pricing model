{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 16,
   "metadata": {},
   "outputs": [],
   "source": [
    "#!/usr/bin/env python3\n",
    "# -*- coding: utf-8 -*-\n",
    "\"\"\"\n",
    "Created on Sun Mar 10 09:26:41 2019\n",
    "\n",
    "@author: mengxiangyu\n",
    "\"\"\"\n",
    "import numpy as np\n",
    "from scipy.sparse import diags\n",
    "from numpy.linalg import inv\n",
    "import math as m\n",
    "#import bs_options as bs\n",
    "import matplotlib.pyplot as plt\n",
    "\n",
    "#%matplotlib inline\n",
    "\n",
    "\n",
    "class op_cknl:\n",
    "    N = 200\n",
    "    J = 500\n",
    "    def __init__(self,CallFlag = True,\\\n",
    "                 EuroFlag = True,S0 = 80,K = 90,\\\n",
    "              T = 5,vol = 0.5,r = 0.05,\\\n",
    "              d = 0.05):\n",
    "        #Basic Parameters\n",
    "        self.CallFlag = CallFlag\n",
    "        self.EuroFlag = EuroFlag\n",
    "        self.S0 = S0\n",
    "        self.K = K\n",
    "        self.T = T\n",
    "        self.vol = vol\n",
    "        self.r = r\n",
    "        self.d = d\n",
    "\n",
    "        #Numerical Method for PDE\n",
    "        self.x_max = vol * np.sqrt(T) * 5\n",
    "        self.dx = 2 * self.x_max / op_cknl.N\n",
    "        self.x = np.linspace(-self.x_max, self.x_max, op_cknl.N + 1)\n",
    "        self.dt = T / op_cknl.J\n",
    "        self.Tau = np.arange(op_cknl.J) * self.dt\n",
    "        self.S = np.exp(self.x) * self.S0\n",
    "        self.mu = r - d - 0.5 * vol**2\n",
    "\n",
    "        #Parameters of discretized PDE\n",
    "        self.pa = -0.25 * ((vol**2) / (self.dx**2) + self.mu / self.dx)\n",
    "        self.pb = 1 / self.dt + (vol**2) / (2 * self.dx**2)\n",
    "        self.pc = -0.25 * ((vol**2) / (self.dx**2) - self.mu / self.dx)\n",
    "        self.pd = -self.pa\n",
    "        self.pe = 1 / self.dt - r - 0.5 * (vol**2) / (self.dx**2)\n",
    "        self.pf = -self.pc\n",
    "\n",
    "        #Vectorized Parameters of discretized PDE\n",
    "        self.va = [self.pa] * (op_cknl.N + 1)\n",
    "        self.vb = [self.pb] * (op_cknl.N + 1)\n",
    "        self.vc = [self.pc] * (op_cknl.N + 1)\n",
    "        self.vd = [self.pd] * (op_cknl.N + 1)\n",
    "        self.ve = [self.pe] * (op_cknl.N + 1)\n",
    "        self.vf = [self.pf] * (op_cknl.N + 1)\n",
    "\n",
    "        #Parameter Matrices\n",
    "        self.A = diags([self.ve, self.vd[:-1], self.vf[1:]],\n",
    "                       [0, 1, -1]).toarray()\n",
    "        self.B = diags([self.vb, self.va[:-1], self.vc[1:]],\n",
    "                       [0, 1, -1]).toarray()\n",
    "\n",
    "    def delta(self, vm, n_mid):\n",
    "        return ((vm[-1][2]-vm[-1][0])/\\\n",
    "            (2*self.dx)+(vm[-2][2]-vm[-2][0])/(2*self.dx))\\\n",
    "                /2/(self.S[n_mid])\n",
    "\n",
    "    #@classmethod\n",
    "    def gamma(self, vm, n_mid):\n",
    "        dv2_dx2=(vm[-1][2]+vm[-1][0]-2*vm[-1][1]+\\\n",
    "             vm[-2][2]+vm[-2][0]-2*vm[-2][1])/(2*self.dx**2)\n",
    "        dx_ds = 1 / self.S[n_mid]\n",
    "        dv_dx = ((vm[-1][2]-vm[-1][0])/\\\n",
    "             (2*self.dx)+(vm[-2][2]-vm[-2][0])/(2*self.dx))/2\n",
    "        dx2_ds_2 = -1 / self.S[n_mid]**2\n",
    "        return dv2_dx2 * dx_ds**2 + dv_dx * dx2_ds_2\n",
    "\n",
    "    #@classmethod\n",
    "    def theta(self, vm):\n",
    "        return (vm[-1][0] - vm[-2][0]) / self.dt\n",
    "\n",
    "    def option_price_greek(self):\n",
    "        if self.CallFlag == True and self.EuroFlag == True:\n",
    "            #European Call Options Pricing\n",
    "            V = np.clip(np.exp(self.x) * self.S0 - self.K, 0, 1e10)\n",
    "            Binv = np.linalg.inv(self.B)\n",
    "            V_midec = []\n",
    "            n_mid = int(op_cknl.N / 2)\n",
    "            cut = int(op_cknl.N / 4)\n",
    "            for j in range(op_cknl.J):\n",
    "                V = Binv.dot(self.A).dot(V)\n",
    "                V[0] = 0\n",
    "                V[op_cknl.N] = np.exp(self.x_max) *self.S0* np.exp(\n",
    "                    -self.d * j * self.dt)  - self.K * np.exp(\n",
    "                    -self.r * j * self.dt)\n",
    "                if j % 50 == 0:\n",
    "                    plt.plot(self.S0 * np.exp(self.x[cut:-cut]), V[cut:-cut])\n",
    "                V_midec.append([V[n_mid - 1], V[n_mid], V[n_mid + 1]])\n",
    "            price = V[n_mid]\n",
    "            delta = self.delta(V_midec, n_mid)\n",
    "            gamma = self.gamma(V_midec, n_mid)\n",
    "            theta = self.theta(V_midec)\n",
    "            result = [price, delta, gamma, theta]\n",
    "        elif self.CallFlag == True and self.EuroFlag == False:\n",
    "            #American Call Options Pricing\n",
    "            V0 = np.clip(self.S0 * np.exp(self.x) - self.K, 0, 1e10)\n",
    "            V = V0.copy()\n",
    "            V_midac = []\n",
    "            Binv = np.linalg.inv(self.B)\n",
    "            n_mid = int(op_cknl.N / 2)\n",
    "            cut = int(op_cknl.N / 4)\n",
    "            for j in range(op_cknl.J):\n",
    "                V = Binv.dot(self.A).dot(V)\n",
    "                V = np.where(V < V0, V0, V)\n",
    "                if j % 50 == 0:\n",
    "                    plt.plot(self.S0 * np.exp(self.x[cut:-cut]), V[cut:-cut])\n",
    "                V_midac.append([V[n_mid - 1], V[n_mid], V[n_mid + 1]])\n",
    "            price = V[n_mid]\n",
    "            delta = self.delta(V_midac, n_mid)\n",
    "            gamma = self.gamma(V_midac, n_mid)\n",
    "            theta = self.theta(V_midac)\n",
    "            result = [price, delta, gamma, theta]\n",
    "\n",
    "        elif self.CallFlag == False and self.EuroFlag == True:\n",
    "            #European Put Options Pricing\n",
    "            V = np.clip(self.K - np.exp(self.x) * self.S0, 0, 1e10)\n",
    "            Binv = np.linalg.inv(self.B)\n",
    "            V_midep = []\n",
    "            n_mid = int(op_cknl.N / 2)\n",
    "            cut = int(op_cknl.N / 4)\n",
    "            #V = S\n",
    "            for j in range(op_cknl.J):\n",
    "                V = Binv.dot(self.A).dot(V)\n",
    "                V[op_cknl.N] = 0\n",
    "                V[0] = np.exp(self.x_max) * self.S0* np.exp(\n",
    "                    -self.d * j * self.dt)  - self.K * np.exp(\n",
    "                    -self.r * j * self.dt)\n",
    "                if j % 50 == 0:\n",
    "                    plt.plot(self.S0 * np.exp(self.x[cut:-cut]), V[cut:-cut])\n",
    "                V_midep.append([V[n_mid - 1], V[n_mid], V[n_mid + 1]])\n",
    "\n",
    "            price = V[n_mid]\n",
    "            delta = self.delta(V_midep, n_mid)\n",
    "            gamma = self.gamma(V_midep, n_mid)\n",
    "            theta = self.theta(V_midep)\n",
    "            result = [price, delta, gamma, theta]\n",
    "        elif self.CallFlag == False and self.EuroFlag == False:\n",
    "            #American Put Options Pricing\n",
    "            V0 = np.clip(self.K - self.S0 * np.exp(self.x), 0, 1e10)\n",
    "            V = V0.copy()\n",
    "            Binv = np.linalg.inv(self.B)\n",
    "            V_midap = []\n",
    "            n_mid = int(op_cknl.N / 2)\n",
    "            cut = int(op_cknl.N / 4)\n",
    "            for j in range(op_cknl.J):\n",
    "                V = Binv.dot(self.A).dot(V)\n",
    "                V = np.where(V < V0, V0, V)\n",
    "                \n",
    "                \n",
    "                if j % 50 == 0:\n",
    "                    plt.plot(self.S0 * np.exp(self.x[cut:-cut]), V[cut:-cut])\n",
    "                V_midap.append([V[n_mid - 1], V[n_mid], V[n_mid + 1]])\n",
    "\n",
    "            price = V[n_mid]\n",
    "            delta = self.delta(V_midap, n_mid)\n",
    "            gamma = self.gamma(V_midap, n_mid)\n",
    "            theta = self.theta(V_midap)\n",
    "            result = [price, delta, gamma, theta]\n",
    "        return result"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 19,
   "metadata": {},
   "outputs": [],
   "source": [
    "euro_put = op_cknl(False, True, 110, 100, 1, 0.3, 0.05, 0)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 20,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "The option price is  6.184154879315177\n",
      "The delta is  -0.2629555087704485\n",
      "The gamma is  0.009895884523018348\n",
      "The theta is  3.6275266850305243\n"
     ]
    },
    {
     "data": {
      "image/png": "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\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "result = euro_put.option_price_greek()\n",
    "print('The option price is ', result[0])\n",
    "print('The delta is ', result[1])\n",
    "print('The gamma is ', result[2])\n",
    "print('The theta is ', result[3])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 14,
   "metadata": {},
   "outputs": [],
   "source": [
    "euro_call = op_cknl(True, True, 90, 100, 1, 0.3, 0.01, 0.15)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 15,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "The option price is  3.0358922790864344\n",
      "The delta is  0.21704698624788543\n",
      "The gamma is  0.010184661086390871\n",
      "The theta is  0.9785010512235459\n"
     ]
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "result = euro_call.option_price_greek()\n",
    "print('The option price is ', result[0])\n",
    "print('The delta is ', result[1])\n",
    "print('The gamma is ', result[2])\n",
    "print('The theta is ', result[3])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 12,
   "metadata": {},
   "outputs": [],
   "source": [
    "amer_put = op_cknl(False, False, 110, 100, 1, 0.3, 0.05, 0)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 13,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "The option price is  6.470454832988053\n",
      "The delta is  -0.27962623330049075\n",
      "The gamma is  0.010865090012128643\n",
      "The theta is  4.075158064431594\n"
     ]
    },
    {
     "data": {
      "image/png": "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\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "result = amer_put.option_price_greek()\n",
    "print('The option price is ', result[0])\n",
    "print('The delta is ', result[1])\n",
    "print('The gamma is ', result[2])\n",
    "print('The theta is ', result[3])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "metadata": {},
   "outputs": [],
   "source": [
    "amer_call = op_cknl(True, False, 90, 100, 1, 0.3, 0.01, 0.15)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "The option price is  3.7082511953999058\n",
      "The delta is  0.2802970365726331\n",
      "The gamma is  0.014889665386791222\n",
      "The theta is  1.8117594982929308\n"
     ]
    },
    {
     "data": {
      "image/png": "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\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "result = amer_call.option_price_greek()\n",
    "print('The option price is ', result[0])\n",
    "print('The delta is ', result[1])\n",
    "print('The gamma is ', result[2])\n",
    "print('The theta is ', result[3])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.7.2"
  },
  "varInspector": {
   "cols": {
    "lenName": 16,
    "lenType": 16,
    "lenVar": 40
   },
   "kernels_config": {
    "python": {
     "delete_cmd_postfix": "",
     "delete_cmd_prefix": "del ",
     "library": "var_list.py",
     "varRefreshCmd": "print(var_dic_list())"
    },
    "r": {
     "delete_cmd_postfix": ") ",
     "delete_cmd_prefix": "rm(",
     "library": "var_list.r",
     "varRefreshCmd": "cat(var_dic_list()) "
    }
   },
   "types_to_exclude": [
    "module",
    "function",
    "builtin_function_or_method",
    "instance",
    "_Feature"
   ],
   "window_display": false
  }
 },
 "nbformat": 4,
 "nbformat_minor": 2
}
